{"ast":null,"code":"var _jsxFileName = \"/Users/arturo.velazquez/Documents/GIT/SWE/TEMPLATES/react.my-asin-manager/src/components/Code.js\";\nimport React, { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Card, Button, Tooltip, OverlayTrigger } from '@themesberg/react-bootstrap';\nimport Highlight, { Prism } from 'prism-react-renderer';\nimport themeStyle from \"../assets/syntax-themes/ghcolors.json\";\nexport default (props => {\n  const {\n    code = \"\",\n    language = \"jsx\"\n  } = props;\n  const [copied, setCopied] = useState(false);\n  const handleCopy = () => {\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n  const CodeStyling = _ref => {\n    let {\n      className,\n      style,\n      tokens,\n      getLineProps,\n      getTokenProps\n    } = _ref;\n    return /*#__PURE__*/React.createElement(Card, {\n      className: \"position-relative pe-8 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"pre\", {\n      className: className,\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, tokens.map((line, i) => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getLineProps({\n      line,\n      key: i\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }), line.map((token, key) => /*#__PURE__*/React.createElement(\"span\", Object.assign({}, getTokenProps({\n      token,\n      key\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 41\n      }\n    })))))), copied ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-success copy-code-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 19\n      }\n    }, \"Copied\") : null, /*#__PURE__*/React.createElement(OverlayTrigger, {\n      trigger: ['hover', 'focus'],\n      placement: \"top\",\n      overlay: /*#__PURE__*/React.createElement(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }\n      }, \"Copy to clipboard\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CopyToClipboard, {\n      text: code,\n      onCopy: handleCopy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"primary\",\n      className: \"copy-code-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, \"Copy\")))));\n  };\n  return /*#__PURE__*/React.createElement(Highlight, {\n    Prism: Prism,\n    code: code,\n    language: language,\n    theme: themeStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, CodeStyling);\n});","map":{"version":3,"names":["React","useState","CopyToClipboard","Card","Button","Tooltip","OverlayTrigger","Highlight","Prism","themeStyle","props","code","language","copied","setCopied","handleCopy","setTimeout","CodeStyling","className","style","tokens","getLineProps","getTokenProps","map","line","i","key","token"],"sources":["/Users/arturo.velazquez/Documents/GIT/SWE/TEMPLATES/react.my-asin-manager/src/components/Code.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Card, Button, Tooltip, OverlayTrigger } from '@themesberg/react-bootstrap';\nimport Highlight, { Prism } from 'prism-react-renderer';\n\nimport themeStyle from \"../assets/syntax-themes/ghcolors.json\";\n\nexport default (props) => {\n  const { code = \"\", language = \"jsx\" } = props;\n  const [copied, setCopied] = useState(false);\n\n  const handleCopy = () => {\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  const CodeStyling = ({ className, style, tokens, getLineProps, getTokenProps }) => (\n    <Card className=\"position-relative pe-8 mb-2\">\n      <Card.Body>\n        <pre className={className} style={style}>\n          {tokens.map((line, i) => (\n            <div {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => <span {...getTokenProps({ token, key })} />)}\n            </div>\n          ))}\n        </pre>\n\n        {copied ? <span className=\"text-success copy-code-text\">Copied</span> : null}\n\n        <OverlayTrigger\n          trigger={['hover', 'focus']}\n          placement=\"top\"\n          overlay={<Tooltip>Copy to clipboard</Tooltip>}\n        >\n          <CopyToClipboard text={code} onCopy={handleCopy}>\n            <Button size=\"sm\" variant=\"primary\" className=\"copy-code-button\">Copy</Button>\n          </CopyToClipboard>\n        </OverlayTrigger>\n      </Card.Body>\n    </Card>\n  );\n\n  return (\n    <Highlight Prism={Prism} code={code} language={language} theme={themeStyle}>\n      {CodeStyling}\n    </Highlight>\n  );\n};\n\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,QAAQ,yBAAyB;AACzD,SAASC,IAAI,EAAEC,MAAM,EAAEC,OAAO,EAAEC,cAAc,QAAQ,6BAA6B;AACnF,OAAOC,SAAS,IAAIC,KAAK,QAAQ,sBAAsB;AAEvD,OAAOC,UAAU,MAAM,uCAAuC;AAE9D,gBAAgBC,KAAK,IAAK;EACxB,MAAM;IAAEC,IAAI,GAAG,EAAE;IAAEC,QAAQ,GAAG;EAAM,CAAC,GAAGF,KAAK;EAC7C,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMc,UAAU,GAAG,MAAM;IACvBD,SAAS,CAAC,IAAI,CAAC;IACfE,UAAU,CAAC,MAAMF,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;EAC1C,CAAC;EAED,MAAMG,WAAW,GAAG;IAAA,IAAC;MAAEC,SAAS;MAAEC,KAAK;MAAEC,MAAM;MAAEC,YAAY;MAAEC;IAAc,CAAC;IAAA,oBAC5E,oBAAC,IAAI;MAAC,SAAS,EAAC,6BAA6B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAC3C,oBAAC,IAAI,CAAC,IAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACR;MAAK,SAAS,EAAEJ,SAAU;MAAC,KAAK,EAAEC,KAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACrCC,MAAM,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBAClB,6CAASJ,YAAY,CAAC;MAAEG,IAAI;MAAEE,GAAG,EAAED;IAAE,CAAC,CAAC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,IACpCD,IAAI,CAACD,GAAG,CAAC,CAACI,KAAK,EAAED,GAAG,kBAAK,8CAAUJ,aAAa,CAAC;MAAEK,KAAK;MAAED;IAAI,CAAC,CAAC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAI,CAAC,CAEzE,CAAC,CACE,EAELb,MAAM,gBAAG;MAAM,SAAS,EAAC,6BAA6B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,YAAc,GAAG,IAAI,eAE5E,oBAAC,cAAc;MACb,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,CAAE;MAC5B,SAAS,EAAC,KAAK;MACf,OAAO,eAAE,oBAAC,OAAO;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,uBAA6B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAE9C,oBAAC,eAAe;MAAC,IAAI,EAAEF,IAAK;MAAC,MAAM,EAAEI,UAAW;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAC9C,oBAAC,MAAM;MAAC,IAAI,EAAC,IAAI;MAAC,OAAO,EAAC,SAAS;MAAC,SAAS,EAAC,kBAAkB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,UAAc,CAC9D,CACH,CACP,CACP;EAAA,CACR;EAED,oBACE,oBAAC,SAAS;IAAC,KAAK,EAAEP,KAAM;IAAC,IAAI,EAAEG,IAAK;IAAC,QAAQ,EAAEC,QAAS;IAAC,KAAK,EAAEH,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACxEQ,WAAW,CACF;AAEhB,CAAC"},"metadata":{},"sourceType":"module"}