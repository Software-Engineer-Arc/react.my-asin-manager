{"ast":null,"code":"import namor from 'namor';\nconst range = len => {\n  const arr = [];\n  for (let i = 0; i < len; i++) {\n    arr.push(i);\n  }\n  return arr;\n};\nconst newProduct = () => {\n  const tagsChance = Math.random();\n  const categoryChance = Math.random();\n  return {\n    title: namor.generate({\n      words: 1,\n      numbers: 0\n    }),\n    ASIN: namor.generate({\n      words: 1,\n      numbers: 0\n    }),\n    amazonLink: namor.generate({\n      words: 1,\n      numbers: 0\n    }),\n    supplierLink: namor.generate({\n      words: 1,\n      numbers: 0\n    }),\n    supplierName: namor.generate({\n      words: 1,\n      numbers: 0\n    }),\n    currentBBPrice: Math.floor(Math.random() * 100),\n    buyCost: Math.floor(Math.random() * 100),\n    netProfit: Math.floor(Math.random() * 100),\n    ROI: Math.floor(Math.random() * 100),\n    margin: Math.floor(Math.random() * 100),\n    additionalCost: Math.floor(Math.random() * 100),\n    currentBSR: Math.floor(Math.random() * 100),\n    latest90DaysPriceAverage: Math.floor(Math.random() * 100),\n    latest90DayBSR: Math.floor(Math.random() * 100),\n    latest90DaysNumberOfDrops: Math.floor(Math.random() * 100),\n    productCategory: categoryChance > 0.66 ? 'toy' : categoryChance > 0.33 ? 'home' : 'office',\n    notes: namor.generate({\n      words: 1,\n      numbers: 0\n    }),\n    tags: tagsChance > 0.66 ? 'christmas' : tagsChance > 0.33 ? 'halloween' : 'birthday'\n  };\n};\n\n// export default function makeData(...lens) {\n//   const makeDataLevel = (depth = 0) => {\n//     const len = lens[depth]\n//     return range(len).map(d => {\n//       return {\n//         ...newProduct(),\n//         subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\n//       }\n//     })\n//   }\nexport default function makeData() {\n  const makeDataLevel = function () {\n    let depth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return [{\n      title: 'Tayga Pesa Rusa Fitness Kettlebell en LB',\n      ASIN: 'B085Q2XHQ8',\n      amazonLink: 'https://www.amazon.com.mx/dp/B085Q2XHQ8',\n      supplierLink: 'https://www.walmart.com.mx/deportes/entrenamiento-y-fitness/mancuernas-pesas-y-barras/pesa-rusa-vinyl-tayga-15-lb_00066469705531',\n      supplierName: 'Pesa Rusa Vinyl Tayga 15 Lb',\n      currentBBPrice: 128.0,\n      buyCost: 129.00,\n      netProfit: 125.44,\n      ROI: 96.5,\n      margin: 0,\n      additionalCost: 10.0,\n      currentBSR: 128.0,\n      latest90DaysPriceAverage: 127.0,\n      latest90DayBSR: 0,\n      latest90DaysNumberOfDrops: 0,\n      productCategory: 'Exercise and Physical Conditioning',\n      notes: 'Free shipping',\n      tags: 'christmas'\n    }\n    // ,{\n    //   title: namor.generate({ words: 1, numbers: 0 }),\n    //   ASIN: namor.generate({ words: 1, numbers: 0 }),\n    //   amazonLink:namor.generate({ words: 1, numbers: 0 }),\n    //   supplierLink: namor.generate({ words: 1, numbers: 0 }),\n    //   supplierName: namor.generate({ words: 1, numbers: 0 }),\n    //   currentBBPrice: Math.floor(Math.random() * 100),\n    //   buyCost: Math.floor(Math.random() * 100),\n    //   netProfit: Math.floor(Math.random() * 100),\n    //   ROI: Math.floor(Math.random() * 100),\n    //   margin: Math.floor(Math.random() * 100),\n    //   additionalCost: Math.floor(Math.random() * 100),\n    //   currentBSR: Math.floor(Math.random() * 100),\n    //   latest90DaysPriceAverage: Math.floor(Math.random() * 100),\n    //   latest90DayBSR: Math.floor(Math.random() * 100),\n    //   latest90DaysNumberOfDrops: Math.floor(Math.random() * 100),\n    //   productCategory: categoryChance > 0.66\n    //   ? 'toy'\n    //   : categoryChance > 0.33\n    //   ? 'home'\n    //   : 'office',\n    //   notes: namor.generate({ words: 1, numbers: 0 }),\n    //   tags: tagsChance > 0.66\n    //   ? 'christmas'\n    //   : tagsChance > 0.33\n    //   ? 'halloween'\n    //   : 'birthday',\n    // }\n    ];\n  };\n\n  return makeDataLevel();\n}","map":{"version":3,"names":["namor","range","len","arr","i","push","newProduct","tagsChance","Math","random","categoryChance","title","generate","words","numbers","ASIN","amazonLink","supplierLink","supplierName","currentBBPrice","floor","buyCost","netProfit","ROI","margin","additionalCost","currentBSR","latest90DaysPriceAverage","latest90DayBSR","latest90DaysNumberOfDrops","productCategory","notes","tags","makeData","makeDataLevel","depth"],"sources":["/Users/arturo.velazquez/Documents/GIT/SWE/TEMPLATES/react.my-asin-manager/src/pages/makeData.js"],"sourcesContent":["import namor from 'namor'\n\nconst range = len => {\n  const arr = []\n  for (let i = 0; i < len; i++) {\n    arr.push(i)\n  }\n  return arr\n}\n\nconst newProduct = () => {\n  const tagsChance = Math.random()\n  const categoryChance = Math.random()\n  return {\n    title: namor.generate({ words: 1, numbers: 0 }),\n    ASIN: namor.generate({ words: 1, numbers: 0 }),\n    amazonLink:namor.generate({ words: 1, numbers: 0 }),\n    supplierLink: namor.generate({ words: 1, numbers: 0 }),\n    supplierName: namor.generate({ words: 1, numbers: 0 }),\n    currentBBPrice: Math.floor(Math.random() * 100),\n    buyCost: Math.floor(Math.random() * 100),\n    netProfit: Math.floor(Math.random() * 100),\n    ROI: Math.floor(Math.random() * 100),\n    margin: Math.floor(Math.random() * 100),\n    additionalCost: Math.floor(Math.random() * 100),\n    currentBSR: Math.floor(Math.random() * 100),\n    latest90DaysPriceAverage: Math.floor(Math.random() * 100),\n    latest90DayBSR: Math.floor(Math.random() * 100),\n    latest90DaysNumberOfDrops: Math.floor(Math.random() * 100),\n    productCategory: categoryChance > 0.66\n    ? 'toy'\n    : categoryChance > 0.33\n    ? 'home'\n    : 'office',\n    notes: namor.generate({ words: 1, numbers: 0 }),\n    tags: tagsChance > 0.66\n    ? 'christmas'\n    : tagsChance > 0.33\n    ? 'halloween'\n    : 'birthday',\n  }\n}\n\n// export default function makeData(...lens) {\n//   const makeDataLevel = (depth = 0) => {\n//     const len = lens[depth]\n//     return range(len).map(d => {\n//       return {\n//         ...newProduct(),\n//         subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\n//       }\n//     })\n//   }\nexport default function makeData() {\n  const makeDataLevel = (depth = 0) => {\n    return [{\n      title: 'Tayga Pesa Rusa Fitness Kettlebell en LB',\n      ASIN: 'B085Q2XHQ8',\n      amazonLink:'https://www.amazon.com.mx/dp/B085Q2XHQ8',\n      supplierLink: 'https://www.walmart.com.mx/deportes/entrenamiento-y-fitness/mancuernas-pesas-y-barras/pesa-rusa-vinyl-tayga-15-lb_00066469705531',\n      supplierName: 'Pesa Rusa Vinyl Tayga 15 Lb',\n      currentBBPrice: 128.0,\n      buyCost: 129.00,\n      netProfit: 125.44,\n      ROI: 96.5,\n      margin: 0,\n      additionalCost: 10.0,\n      currentBSR: 128.0,\n      latest90DaysPriceAverage: 127.0,\n      latest90DayBSR: 0,\n      latest90DaysNumberOfDrops: 0,\n      productCategory: 'Exercise and Physical Conditioning',\n      notes: 'Free shipping',\n      tags: 'christmas'     \n    }\n    // ,{\n    //   title: namor.generate({ words: 1, numbers: 0 }),\n    //   ASIN: namor.generate({ words: 1, numbers: 0 }),\n    //   amazonLink:namor.generate({ words: 1, numbers: 0 }),\n    //   supplierLink: namor.generate({ words: 1, numbers: 0 }),\n    //   supplierName: namor.generate({ words: 1, numbers: 0 }),\n    //   currentBBPrice: Math.floor(Math.random() * 100),\n    //   buyCost: Math.floor(Math.random() * 100),\n    //   netProfit: Math.floor(Math.random() * 100),\n    //   ROI: Math.floor(Math.random() * 100),\n    //   margin: Math.floor(Math.random() * 100),\n    //   additionalCost: Math.floor(Math.random() * 100),\n    //   currentBSR: Math.floor(Math.random() * 100),\n    //   latest90DaysPriceAverage: Math.floor(Math.random() * 100),\n    //   latest90DayBSR: Math.floor(Math.random() * 100),\n    //   latest90DaysNumberOfDrops: Math.floor(Math.random() * 100),\n    //   productCategory: categoryChance > 0.66\n    //   ? 'toy'\n    //   : categoryChance > 0.33\n    //   ? 'home'\n    //   : 'office',\n    //   notes: namor.generate({ words: 1, numbers: 0 }),\n    //   tags: tagsChance > 0.66\n    //   ? 'christmas'\n    //   : tagsChance > 0.33\n    //   ? 'halloween'\n    //   : 'birthday',\n    // }\n  \n  ]\n  }\n  return makeDataLevel()\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,KAAK,GAAGC,GAAG,IAAI;EACnB,MAAMC,GAAG,GAAG,EAAE;EACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,EAAEE,CAAC,EAAE,EAAE;IAC5BD,GAAG,CAACE,IAAI,CAACD,CAAC,CAAC;EACb;EACA,OAAOD,GAAG;AACZ,CAAC;AAED,MAAMG,UAAU,GAAG,MAAM;EACvB,MAAMC,UAAU,GAAGC,IAAI,CAACC,MAAM,EAAE;EAChC,MAAMC,cAAc,GAAGF,IAAI,CAACC,MAAM,EAAE;EACpC,OAAO;IACLE,KAAK,EAAEX,KAAK,CAACY,QAAQ,CAAC;MAAEC,KAAK,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAE,CAAC,CAAC;IAC/CC,IAAI,EAAEf,KAAK,CAACY,QAAQ,CAAC;MAAEC,KAAK,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAE,CAAC,CAAC;IAC9CE,UAAU,EAAChB,KAAK,CAACY,QAAQ,CAAC;MAAEC,KAAK,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAE,CAAC,CAAC;IACnDG,YAAY,EAAEjB,KAAK,CAACY,QAAQ,CAAC;MAAEC,KAAK,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAE,CAAC,CAAC;IACtDI,YAAY,EAAElB,KAAK,CAACY,QAAQ,CAAC;MAAEC,KAAK,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAE,CAAC,CAAC;IACtDK,cAAc,EAAEX,IAAI,CAACY,KAAK,CAACZ,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAC;IAC/CY,OAAO,EAAEb,IAAI,CAACY,KAAK,CAACZ,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAC;IACxCa,SAAS,EAAEd,IAAI,CAACY,KAAK,CAACZ,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAC;IAC1Cc,GAAG,EAAEf,IAAI,CAACY,KAAK,CAACZ,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAC;IACpCe,MAAM,EAAEhB,IAAI,CAACY,KAAK,CAACZ,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAC;IACvCgB,cAAc,EAAEjB,IAAI,CAACY,KAAK,CAACZ,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAC;IAC/CiB,UAAU,EAAElB,IAAI,CAACY,KAAK,CAACZ,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAC;IAC3CkB,wBAAwB,EAAEnB,IAAI,CAACY,KAAK,CAACZ,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAC;IACzDmB,cAAc,EAAEpB,IAAI,CAACY,KAAK,CAACZ,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAC;IAC/CoB,yBAAyB,EAAErB,IAAI,CAACY,KAAK,CAACZ,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAC;IAC1DqB,eAAe,EAAEpB,cAAc,GAAG,IAAI,GACpC,KAAK,GACLA,cAAc,GAAG,IAAI,GACrB,MAAM,GACN,QAAQ;IACVqB,KAAK,EAAE/B,KAAK,CAACY,QAAQ,CAAC;MAAEC,KAAK,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAE,CAAC,CAAC;IAC/CkB,IAAI,EAAEzB,UAAU,GAAG,IAAI,GACrB,WAAW,GACXA,UAAU,GAAG,IAAI,GACjB,WAAW,GACX;EACJ,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS0B,QAAQ,GAAG;EACjC,MAAMC,aAAa,GAAG,YAAe;IAAA,IAAdC,KAAK,uEAAG,CAAC;IAC9B,OAAO,CAAC;MACNxB,KAAK,EAAE,0CAA0C;MACjDI,IAAI,EAAE,YAAY;MAClBC,UAAU,EAAC,yCAAyC;MACpDC,YAAY,EAAE,kIAAkI;MAChJC,YAAY,EAAE,6BAA6B;MAC3CC,cAAc,EAAE,KAAK;MACrBE,OAAO,EAAE,MAAM;MACfC,SAAS,EAAE,MAAM;MACjBC,GAAG,EAAE,IAAI;MACTC,MAAM,EAAE,CAAC;MACTC,cAAc,EAAE,IAAI;MACpBC,UAAU,EAAE,KAAK;MACjBC,wBAAwB,EAAE,KAAK;MAC/BC,cAAc,EAAE,CAAC;MACjBC,yBAAyB,EAAE,CAAC;MAC5BC,eAAe,EAAE,oCAAoC;MACrDC,KAAK,EAAE,eAAe;MACtBC,IAAI,EAAE;IACR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAAA,CAED;EACD,CAAC;;EACD,OAAOE,aAAa,EAAE;AACxB"},"metadata":{},"sourceType":"module"}