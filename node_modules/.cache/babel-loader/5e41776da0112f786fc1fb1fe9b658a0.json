{"ast":null,"code":"/**\n * SimpleBar.js - v5.3.5\n * Scrollbars, simpler.\n * https://grsmto.github.io/simplebar/\n *\n * Made by Adrien Denat from a fork by Jonathan Nicol\n * Under MIT License\n */\n\nimport throttle from 'lodash.throttle';\nimport debounce from 'lodash.debounce';\nimport memoize from 'lodash.memoize';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport canUseDOM from 'can-use-dom';\nfunction getElementWindow(element) {\n  if (!element || !element.ownerDocument || !element.ownerDocument.defaultView) {\n    return window;\n  }\n  return element.ownerDocument.defaultView;\n}\nfunction getElementDocument(element) {\n  if (!element || !element.ownerDocument) {\n    return document;\n  }\n  return element.ownerDocument;\n}\nvar cachedScrollbarWidth = null;\nvar cachedDevicePixelRatio = null;\nif (canUseDOM) {\n  window.addEventListener('resize', function () {\n    if (cachedDevicePixelRatio !== window.devicePixelRatio) {\n      cachedDevicePixelRatio = window.devicePixelRatio;\n      cachedScrollbarWidth = null;\n    }\n  });\n}\nfunction scrollbarWidth(el) {\n  if (cachedScrollbarWidth === null) {\n    var document = getElementDocument(el);\n    if (typeof document === 'undefined') {\n      cachedScrollbarWidth = 0;\n      return cachedScrollbarWidth;\n    }\n    var body = document.body;\n    var box = document.createElement('div');\n    box.classList.add('simplebar-hide-scrollbar');\n    body.appendChild(box);\n    var width = box.getBoundingClientRect().right;\n    body.removeChild(box);\n    cachedScrollbarWidth = width;\n  }\n  return cachedScrollbarWidth;\n}\nvar SimpleBar = /*#__PURE__*/\nfunction () {\n  function SimpleBar(element, options) {\n    var _this = this;\n    this.onScroll = function () {\n      var elWindow = getElementWindow(_this.el);\n      if (!_this.scrollXTicking) {\n        elWindow.requestAnimationFrame(_this.scrollX);\n        _this.scrollXTicking = true;\n      }\n      if (!_this.scrollYTicking) {\n        elWindow.requestAnimationFrame(_this.scrollY);\n        _this.scrollYTicking = true;\n      }\n    };\n    this.scrollX = function () {\n      if (_this.axis.x.isOverflowing) {\n        _this.showScrollbar('x');\n        _this.positionScrollbar('x');\n      }\n      _this.scrollXTicking = false;\n    };\n    this.scrollY = function () {\n      if (_this.axis.y.isOverflowing) {\n        _this.showScrollbar('y');\n        _this.positionScrollbar('y');\n      }\n      _this.scrollYTicking = false;\n    };\n    this.onMouseEnter = function () {\n      _this.showScrollbar('x');\n      _this.showScrollbar('y');\n    };\n    this.onMouseMove = function (e) {\n      _this.mouseX = e.clientX;\n      _this.mouseY = e.clientY;\n      if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {\n        _this.onMouseMoveForAxis('x');\n      }\n      if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {\n        _this.onMouseMoveForAxis('y');\n      }\n    };\n    this.onMouseLeave = function () {\n      _this.onMouseMove.cancel();\n      if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {\n        _this.onMouseLeaveForAxis('x');\n      }\n      if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {\n        _this.onMouseLeaveForAxis('y');\n      }\n      _this.mouseX = -1;\n      _this.mouseY = -1;\n    };\n    this.onWindowResize = function () {\n      // Recalculate scrollbarWidth in case it's a zoom\n      _this.scrollbarWidth = _this.getScrollbarWidth();\n      _this.hideNativeScrollbar();\n    };\n    this.hideScrollbars = function () {\n      _this.axis.x.track.rect = _this.axis.x.track.el.getBoundingClientRect();\n      _this.axis.y.track.rect = _this.axis.y.track.el.getBoundingClientRect();\n      if (!_this.isWithinBounds(_this.axis.y.track.rect)) {\n        _this.axis.y.scrollbar.el.classList.remove(_this.classNames.visible);\n        _this.axis.y.isVisible = false;\n      }\n      if (!_this.isWithinBounds(_this.axis.x.track.rect)) {\n        _this.axis.x.scrollbar.el.classList.remove(_this.classNames.visible);\n        _this.axis.x.isVisible = false;\n      }\n    };\n    this.onPointerEvent = function (e) {\n      var isWithinTrackXBounds, isWithinTrackYBounds;\n      _this.axis.x.track.rect = _this.axis.x.track.el.getBoundingClientRect();\n      _this.axis.y.track.rect = _this.axis.y.track.el.getBoundingClientRect();\n      if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {\n        isWithinTrackXBounds = _this.isWithinBounds(_this.axis.x.track.rect);\n      }\n      if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {\n        isWithinTrackYBounds = _this.isWithinBounds(_this.axis.y.track.rect);\n      } // If any pointer event is called on the scrollbar\n\n      if (isWithinTrackXBounds || isWithinTrackYBounds) {\n        // Preventing the event's default action stops text being\n        // selectable during the drag.\n        e.preventDefault(); // Prevent event leaking\n\n        e.stopPropagation();\n        if (e.type === 'mousedown') {\n          if (isWithinTrackXBounds) {\n            _this.axis.x.scrollbar.rect = _this.axis.x.scrollbar.el.getBoundingClientRect();\n            if (_this.isWithinBounds(_this.axis.x.scrollbar.rect)) {\n              _this.onDragStart(e, 'x');\n            } else {\n              _this.onTrackClick(e, 'x');\n            }\n          }\n          if (isWithinTrackYBounds) {\n            _this.axis.y.scrollbar.rect = _this.axis.y.scrollbar.el.getBoundingClientRect();\n            if (_this.isWithinBounds(_this.axis.y.scrollbar.rect)) {\n              _this.onDragStart(e, 'y');\n            } else {\n              _this.onTrackClick(e, 'y');\n            }\n          }\n        }\n      }\n    };\n    this.drag = function (e) {\n      var eventOffset;\n      var track = _this.axis[_this.draggedAxis].track;\n      var trackSize = track.rect[_this.axis[_this.draggedAxis].sizeAttr];\n      var scrollbar = _this.axis[_this.draggedAxis].scrollbar;\n      var contentSize = _this.contentWrapperEl[_this.axis[_this.draggedAxis].scrollSizeAttr];\n      var hostSize = parseInt(_this.elStyles[_this.axis[_this.draggedAxis].sizeAttr], 10);\n      e.preventDefault();\n      e.stopPropagation();\n      if (_this.draggedAxis === 'y') {\n        eventOffset = e.pageY;\n      } else {\n        eventOffset = e.pageX;\n      } // Calculate how far the user's mouse is from the top/left of the scrollbar (minus the dragOffset).\n\n      var dragPos = eventOffset - track.rect[_this.axis[_this.draggedAxis].offsetAttr] - _this.axis[_this.draggedAxis].dragOffset; // Convert the mouse position into a percentage of the scrollbar height/width.\n\n      var dragPerc = dragPos / (trackSize - scrollbar.size); // Scroll the content by the same percentage.\n\n      var scrollPos = dragPerc * (contentSize - hostSize); // Fix browsers inconsistency on RTL\n\n      if (_this.draggedAxis === 'x') {\n        scrollPos = _this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollbarInverted ? scrollPos - (trackSize + scrollbar.size) : scrollPos;\n        scrollPos = _this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollingInverted ? -scrollPos : scrollPos;\n      }\n      _this.contentWrapperEl[_this.axis[_this.draggedAxis].scrollOffsetAttr] = scrollPos;\n    };\n    this.onEndDrag = function (e) {\n      var elDocument = getElementDocument(_this.el);\n      var elWindow = getElementWindow(_this.el);\n      e.preventDefault();\n      e.stopPropagation();\n      _this.el.classList.remove(_this.classNames.dragging);\n      elDocument.removeEventListener('mousemove', _this.drag, true);\n      elDocument.removeEventListener('mouseup', _this.onEndDrag, true);\n      _this.removePreventClickId = elWindow.setTimeout(function () {\n        // Remove these asynchronously so we still suppress click events\n        // generated simultaneously with mouseup.\n        elDocument.removeEventListener('click', _this.preventClick, true);\n        elDocument.removeEventListener('dblclick', _this.preventClick, true);\n        _this.removePreventClickId = null;\n      });\n    };\n    this.preventClick = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n    this.el = element;\n    this.minScrollbarWidth = 20;\n    this.options = Object.assign({}, SimpleBar.defaultOptions, {}, options);\n    this.classNames = Object.assign({}, SimpleBar.defaultOptions.classNames, {}, this.options.classNames);\n    this.axis = {\n      x: {\n        scrollOffsetAttr: 'scrollLeft',\n        sizeAttr: 'width',\n        scrollSizeAttr: 'scrollWidth',\n        offsetSizeAttr: 'offsetWidth',\n        offsetAttr: 'left',\n        overflowAttr: 'overflowX',\n        dragOffset: 0,\n        isOverflowing: true,\n        isVisible: false,\n        forceVisible: false,\n        track: {},\n        scrollbar: {}\n      },\n      y: {\n        scrollOffsetAttr: 'scrollTop',\n        sizeAttr: 'height',\n        scrollSizeAttr: 'scrollHeight',\n        offsetSizeAttr: 'offsetHeight',\n        offsetAttr: 'top',\n        overflowAttr: 'overflowY',\n        dragOffset: 0,\n        isOverflowing: true,\n        isVisible: false,\n        forceVisible: false,\n        track: {},\n        scrollbar: {}\n      }\n    };\n    this.removePreventClickId = null; // Don't re-instantiate over an existing one\n\n    if (SimpleBar.instances.has(this.el)) {\n      return;\n    }\n    this.recalculate = throttle(this.recalculate.bind(this), 64);\n    this.onMouseMove = throttle(this.onMouseMove.bind(this), 64);\n    this.hideScrollbars = debounce(this.hideScrollbars.bind(this), this.options.timeout);\n    this.onWindowResize = debounce(this.onWindowResize.bind(this), 64, {\n      leading: true\n    });\n    SimpleBar.getRtlHelpers = memoize(SimpleBar.getRtlHelpers);\n    this.init();\n  }\n  /**\n   * Static properties\n   */\n\n  /**\n   * Helper to fix browsers inconsistency on RTL:\n   *  - Firefox inverts the scrollbar initial position\n   *  - IE11 inverts both scrollbar position and scrolling offset\n   * Directly inspired by @KingSora's OverlayScrollbars https://github.com/KingSora/OverlayScrollbars/blob/master/js/OverlayScrollbars.js#L1634\n   */\n\n  SimpleBar.getRtlHelpers = function getRtlHelpers() {\n    var dummyDiv = document.createElement('div');\n    dummyDiv.innerHTML = '<div class=\"hs-dummy-scrollbar-size\"><div style=\"height: 200%; width: 200%; margin: 10px 0;\"></div></div>';\n    var scrollbarDummyEl = dummyDiv.firstElementChild;\n    document.body.appendChild(scrollbarDummyEl);\n    var dummyContainerChild = scrollbarDummyEl.firstElementChild;\n    scrollbarDummyEl.scrollLeft = 0;\n    var dummyContainerOffset = SimpleBar.getOffset(scrollbarDummyEl);\n    var dummyContainerChildOffset = SimpleBar.getOffset(dummyContainerChild);\n    scrollbarDummyEl.scrollLeft = 999;\n    var dummyContainerScrollOffsetAfterScroll = SimpleBar.getOffset(dummyContainerChild);\n    return {\n      // determines if the scrolling is responding with negative values\n      isRtlScrollingInverted: dummyContainerOffset.left !== dummyContainerChildOffset.left && dummyContainerChildOffset.left - dummyContainerScrollOffsetAfterScroll.left !== 0,\n      // determines if the origin scrollbar position is inverted or not (positioned on left or right)\n      isRtlScrollbarInverted: dummyContainerOffset.left !== dummyContainerChildOffset.left\n    };\n  };\n  SimpleBar.getOffset = function getOffset(el) {\n    var rect = el.getBoundingClientRect();\n    var elDocument = getElementDocument(el);\n    var elWindow = getElementWindow(el);\n    return {\n      top: rect.top + (elWindow.pageYOffset || elDocument.documentElement.scrollTop),\n      left: rect.left + (elWindow.pageXOffset || elDocument.documentElement.scrollLeft)\n    };\n  };\n  var _proto = SimpleBar.prototype;\n  _proto.init = function init() {\n    // Save a reference to the instance, so we know this DOM node has already been instancied\n    SimpleBar.instances.set(this.el, this); // We stop here on server-side\n\n    if (canUseDOM) {\n      this.initDOM();\n      this.scrollbarWidth = this.getScrollbarWidth();\n      this.recalculate();\n      this.initListeners();\n    }\n  };\n  _proto.initDOM = function initDOM() {\n    var _this2 = this;\n\n    // make sure this element doesn't have the elements yet\n    if (Array.prototype.filter.call(this.el.children, function (child) {\n      return child.classList.contains(_this2.classNames.wrapper);\n    }).length) {\n      // assume that element has his DOM already initiated\n      this.wrapperEl = this.el.querySelector(\".\" + this.classNames.wrapper);\n      this.contentWrapperEl = this.options.scrollableNode || this.el.querySelector(\".\" + this.classNames.contentWrapper);\n      this.contentEl = this.options.contentNode || this.el.querySelector(\".\" + this.classNames.contentEl);\n      this.offsetEl = this.el.querySelector(\".\" + this.classNames.offset);\n      this.maskEl = this.el.querySelector(\".\" + this.classNames.mask);\n      this.placeholderEl = this.findChild(this.wrapperEl, \".\" + this.classNames.placeholder);\n      this.heightAutoObserverWrapperEl = this.el.querySelector(\".\" + this.classNames.heightAutoObserverWrapperEl);\n      this.heightAutoObserverEl = this.el.querySelector(\".\" + this.classNames.heightAutoObserverEl);\n      this.axis.x.track.el = this.findChild(this.el, \".\" + this.classNames.track + \".\" + this.classNames.horizontal);\n      this.axis.y.track.el = this.findChild(this.el, \".\" + this.classNames.track + \".\" + this.classNames.vertical);\n    } else {\n      // Prepare DOM\n      this.wrapperEl = document.createElement('div');\n      this.contentWrapperEl = document.createElement('div');\n      this.offsetEl = document.createElement('div');\n      this.maskEl = document.createElement('div');\n      this.contentEl = document.createElement('div');\n      this.placeholderEl = document.createElement('div');\n      this.heightAutoObserverWrapperEl = document.createElement('div');\n      this.heightAutoObserverEl = document.createElement('div');\n      this.wrapperEl.classList.add(this.classNames.wrapper);\n      this.contentWrapperEl.classList.add(this.classNames.contentWrapper);\n      this.offsetEl.classList.add(this.classNames.offset);\n      this.maskEl.classList.add(this.classNames.mask);\n      this.contentEl.classList.add(this.classNames.contentEl);\n      this.placeholderEl.classList.add(this.classNames.placeholder);\n      this.heightAutoObserverWrapperEl.classList.add(this.classNames.heightAutoObserverWrapperEl);\n      this.heightAutoObserverEl.classList.add(this.classNames.heightAutoObserverEl);\n      while (this.el.firstChild) {\n        this.contentEl.appendChild(this.el.firstChild);\n      }\n      this.contentWrapperEl.appendChild(this.contentEl);\n      this.offsetEl.appendChild(this.contentWrapperEl);\n      this.maskEl.appendChild(this.offsetEl);\n      this.heightAutoObserverWrapperEl.appendChild(this.heightAutoObserverEl);\n      this.wrapperEl.appendChild(this.heightAutoObserverWrapperEl);\n      this.wrapperEl.appendChild(this.maskEl);\n      this.wrapperEl.appendChild(this.placeholderEl);\n      this.el.appendChild(this.wrapperEl);\n    }\n    if (!this.axis.x.track.el || !this.axis.y.track.el) {\n      var track = document.createElement('div');\n      var scrollbar = document.createElement('div');\n      track.classList.add(this.classNames.track);\n      scrollbar.classList.add(this.classNames.scrollbar);\n      track.appendChild(scrollbar);\n      this.axis.x.track.el = track.cloneNode(true);\n      this.axis.x.track.el.classList.add(this.classNames.horizontal);\n      this.axis.y.track.el = track.cloneNode(true);\n      this.axis.y.track.el.classList.add(this.classNames.vertical);\n      this.el.appendChild(this.axis.x.track.el);\n      this.el.appendChild(this.axis.y.track.el);\n    }\n    this.axis.x.scrollbar.el = this.axis.x.track.el.querySelector(\".\" + this.classNames.scrollbar);\n    this.axis.y.scrollbar.el = this.axis.y.track.el.querySelector(\".\" + this.classNames.scrollbar);\n    if (!this.options.autoHide) {\n      this.axis.x.scrollbar.el.classList.add(this.classNames.visible);\n      this.axis.y.scrollbar.el.classList.add(this.classNames.visible);\n    }\n    this.el.setAttribute('data-simplebar', 'init');\n  };\n  _proto.initListeners = function initListeners() {\n    var _this3 = this;\n    var elWindow = getElementWindow(this.el); // Event listeners\n\n    if (this.options.autoHide) {\n      this.el.addEventListener('mouseenter', this.onMouseEnter);\n    }\n    ['mousedown', 'click', 'dblclick'].forEach(function (e) {\n      _this3.el.addEventListener(e, _this3.onPointerEvent, true);\n    });\n    ['touchstart', 'touchend', 'touchmove'].forEach(function (e) {\n      _this3.el.addEventListener(e, _this3.onPointerEvent, {\n        capture: true,\n        passive: true\n      });\n    });\n    this.el.addEventListener('mousemove', this.onMouseMove);\n    this.el.addEventListener('mouseleave', this.onMouseLeave);\n    this.contentWrapperEl.addEventListener('scroll', this.onScroll); // Browser zoom triggers a window resize\n\n    elWindow.addEventListener('resize', this.onWindowResize); // Hack for https://github.com/WICG/ResizeObserver/issues/38\n\n    var resizeObserverStarted = false;\n    var resizeObserver = elWindow.ResizeObserver || ResizeObserver;\n    this.resizeObserver = new resizeObserver(function () {\n      if (!resizeObserverStarted) return;\n      _this3.recalculate();\n    });\n    this.resizeObserver.observe(this.el);\n    this.resizeObserver.observe(this.contentEl);\n    elWindow.requestAnimationFrame(function () {\n      resizeObserverStarted = true;\n    }); // This is required to detect horizontal scroll. Vertical scroll only needs the resizeObserver.\n\n    this.mutationObserver = new elWindow.MutationObserver(this.recalculate);\n    this.mutationObserver.observe(this.contentEl, {\n      childList: true,\n      subtree: true,\n      characterData: true\n    });\n  };\n  _proto.recalculate = function recalculate() {\n    var elWindow = getElementWindow(this.el);\n    this.elStyles = elWindow.getComputedStyle(this.el);\n    this.isRtl = this.elStyles.direction === 'rtl';\n    var isHeightAuto = this.heightAutoObserverEl.offsetHeight <= 1;\n    var isWidthAuto = this.heightAutoObserverEl.offsetWidth <= 1;\n    var contentElOffsetWidth = this.contentEl.offsetWidth;\n    var contentWrapperElOffsetWidth = this.contentWrapperEl.offsetWidth;\n    var elOverflowX = this.elStyles.overflowX;\n    var elOverflowY = this.elStyles.overflowY;\n    this.contentEl.style.padding = this.elStyles.paddingTop + \" \" + this.elStyles.paddingRight + \" \" + this.elStyles.paddingBottom + \" \" + this.elStyles.paddingLeft;\n    this.wrapperEl.style.margin = \"-\" + this.elStyles.paddingTop + \" -\" + this.elStyles.paddingRight + \" -\" + this.elStyles.paddingBottom + \" -\" + this.elStyles.paddingLeft;\n    var contentElScrollHeight = this.contentEl.scrollHeight;\n    var contentElScrollWidth = this.contentEl.scrollWidth;\n    this.contentWrapperEl.style.height = isHeightAuto ? 'auto' : '100%'; // Determine placeholder size\n\n    this.placeholderEl.style.width = isWidthAuto ? contentElOffsetWidth + \"px\" : 'auto';\n    this.placeholderEl.style.height = contentElScrollHeight + \"px\";\n    var contentWrapperElOffsetHeight = this.contentWrapperEl.offsetHeight;\n    this.axis.x.isOverflowing = contentElScrollWidth > contentElOffsetWidth;\n    this.axis.y.isOverflowing = contentElScrollHeight > contentWrapperElOffsetHeight; // Set isOverflowing to false if user explicitely set hidden overflow\n\n    this.axis.x.isOverflowing = elOverflowX === 'hidden' ? false : this.axis.x.isOverflowing;\n    this.axis.y.isOverflowing = elOverflowY === 'hidden' ? false : this.axis.y.isOverflowing;\n    this.axis.x.forceVisible = this.options.forceVisible === 'x' || this.options.forceVisible === true;\n    this.axis.y.forceVisible = this.options.forceVisible === 'y' || this.options.forceVisible === true;\n    this.hideNativeScrollbar(); // Set isOverflowing to false if scrollbar is not necessary (content is shorter than offset)\n\n    var offsetForXScrollbar = this.axis.x.isOverflowing ? this.scrollbarWidth : 0;\n    var offsetForYScrollbar = this.axis.y.isOverflowing ? this.scrollbarWidth : 0;\n    this.axis.x.isOverflowing = this.axis.x.isOverflowing && contentElScrollWidth > contentWrapperElOffsetWidth - offsetForYScrollbar;\n    this.axis.y.isOverflowing = this.axis.y.isOverflowing && contentElScrollHeight > contentWrapperElOffsetHeight - offsetForXScrollbar;\n    this.axis.x.scrollbar.size = this.getScrollbarSize('x');\n    this.axis.y.scrollbar.size = this.getScrollbarSize('y');\n    this.axis.x.scrollbar.el.style.width = this.axis.x.scrollbar.size + \"px\";\n    this.axis.y.scrollbar.el.style.height = this.axis.y.scrollbar.size + \"px\";\n    this.positionScrollbar('x');\n    this.positionScrollbar('y');\n    this.toggleTrackVisibility('x');\n    this.toggleTrackVisibility('y');\n  }\n  /**\n   * Calculate scrollbar size\n   */;\n\n  _proto.getScrollbarSize = function getScrollbarSize(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n    if (!this.axis[axis].isOverflowing) {\n      return 0;\n    }\n    var contentSize = this.contentEl[this.axis[axis].scrollSizeAttr];\n    var trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];\n    var scrollbarSize;\n    var scrollbarRatio = trackSize / contentSize; // Calculate new height/position of drag handle.\n\n    scrollbarSize = Math.max(~~(scrollbarRatio * trackSize), this.options.scrollbarMinSize);\n    if (this.options.scrollbarMaxSize) {\n      scrollbarSize = Math.min(scrollbarSize, this.options.scrollbarMaxSize);\n    }\n    return scrollbarSize;\n  };\n  _proto.positionScrollbar = function positionScrollbar(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n    if (!this.axis[axis].isOverflowing) {\n      return;\n    }\n    var contentSize = this.contentWrapperEl[this.axis[axis].scrollSizeAttr];\n    var trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];\n    var hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);\n    var scrollbar = this.axis[axis].scrollbar;\n    var scrollOffset = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n    scrollOffset = axis === 'x' && this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollingInverted ? -scrollOffset : scrollOffset;\n    var scrollPourcent = scrollOffset / (contentSize - hostSize);\n    var handleOffset = ~~((trackSize - scrollbar.size) * scrollPourcent);\n    handleOffset = axis === 'x' && this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollbarInverted ? handleOffset + (trackSize - scrollbar.size) : handleOffset;\n    scrollbar.el.style.transform = axis === 'x' ? \"translate3d(\" + handleOffset + \"px, 0, 0)\" : \"translate3d(0, \" + handleOffset + \"px, 0)\";\n  };\n  _proto.toggleTrackVisibility = function toggleTrackVisibility(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n    var track = this.axis[axis].track.el;\n    var scrollbar = this.axis[axis].scrollbar.el;\n    if (this.axis[axis].isOverflowing || this.axis[axis].forceVisible) {\n      track.style.visibility = 'visible';\n      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'scroll';\n    } else {\n      track.style.visibility = 'hidden';\n      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'hidden';\n    } // Even if forceVisible is enabled, scrollbar itself should be hidden\n\n    if (this.axis[axis].isOverflowing) {\n      scrollbar.style.display = 'block';\n    } else {\n      scrollbar.style.display = 'none';\n    }\n  };\n  _proto.hideNativeScrollbar = function hideNativeScrollbar() {\n    this.offsetEl.style[this.isRtl ? 'left' : 'right'] = this.axis.y.isOverflowing || this.axis.y.forceVisible ? \"-\" + this.scrollbarWidth + \"px\" : 0;\n    this.offsetEl.style.bottom = this.axis.x.isOverflowing || this.axis.x.forceVisible ? \"-\" + this.scrollbarWidth + \"px\" : 0;\n  }\n  /**\n   * On scroll event handling\n   */;\n\n  _proto.onMouseMoveForAxis = function onMouseMoveForAxis(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n    this.axis[axis].track.rect = this.axis[axis].track.el.getBoundingClientRect();\n    this.axis[axis].scrollbar.rect = this.axis[axis].scrollbar.el.getBoundingClientRect();\n    var isWithinScrollbarBoundsX = this.isWithinBounds(this.axis[axis].scrollbar.rect);\n    if (isWithinScrollbarBoundsX) {\n      this.axis[axis].scrollbar.el.classList.add(this.classNames.hover);\n    } else {\n      this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);\n    }\n    if (this.isWithinBounds(this.axis[axis].track.rect)) {\n      this.showScrollbar(axis);\n      this.axis[axis].track.el.classList.add(this.classNames.hover);\n    } else {\n      this.axis[axis].track.el.classList.remove(this.classNames.hover);\n    }\n  };\n  _proto.onMouseLeaveForAxis = function onMouseLeaveForAxis(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n    this.axis[axis].track.el.classList.remove(this.classNames.hover);\n    this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);\n  };\n\n  /**\n   * Show scrollbar\n   */\n  _proto.showScrollbar = function showScrollbar(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n    var scrollbar = this.axis[axis].scrollbar.el;\n    if (!this.axis[axis].isVisible) {\n      scrollbar.classList.add(this.classNames.visible);\n      this.axis[axis].isVisible = true;\n    }\n    if (this.options.autoHide) {\n      this.hideScrollbars();\n    }\n  }\n  /**\n   * Hide Scrollbar\n   */;\n\n  /**\n   * on scrollbar handle drag movement starts\n   */\n  _proto.onDragStart = function onDragStart(e, axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n    var elDocument = getElementDocument(this.el);\n    var elWindow = getElementWindow(this.el);\n    var scrollbar = this.axis[axis].scrollbar; // Measure how far the user's mouse is from the top of the scrollbar drag handle.\n\n    var eventOffset = axis === 'y' ? e.pageY : e.pageX;\n    this.axis[axis].dragOffset = eventOffset - scrollbar.rect[this.axis[axis].offsetAttr];\n    this.draggedAxis = axis;\n    this.el.classList.add(this.classNames.dragging);\n    elDocument.addEventListener('mousemove', this.drag, true);\n    elDocument.addEventListener('mouseup', this.onEndDrag, true);\n    if (this.removePreventClickId === null) {\n      elDocument.addEventListener('click', this.preventClick, true);\n      elDocument.addEventListener('dblclick', this.preventClick, true);\n    } else {\n      elWindow.clearTimeout(this.removePreventClickId);\n      this.removePreventClickId = null;\n    }\n  }\n  /**\n   * Drag scrollbar handle\n   */;\n\n  _proto.onTrackClick = function onTrackClick(e, axis) {\n    var _this4 = this;\n    if (axis === void 0) {\n      axis = 'y';\n    }\n    if (!this.options.clickOnTrack) return;\n    var elWindow = getElementWindow(this.el);\n    this.axis[axis].scrollbar.rect = this.axis[axis].scrollbar.el.getBoundingClientRect();\n    var scrollbar = this.axis[axis].scrollbar;\n    var scrollbarOffset = scrollbar.rect[this.axis[axis].offsetAttr];\n    var hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);\n    var scrolled = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n    var t = axis === 'y' ? this.mouseY - scrollbarOffset : this.mouseX - scrollbarOffset;\n    var dir = t < 0 ? -1 : 1;\n    var scrollSize = dir === -1 ? scrolled - hostSize : scrolled + hostSize;\n    var scrollTo = function scrollTo() {\n      if (dir === -1) {\n        if (scrolled > scrollSize) {\n          var _this4$contentWrapper;\n          scrolled -= _this4.options.clickOnTrackSpeed;\n          _this4.contentWrapperEl.scrollTo((_this4$contentWrapper = {}, _this4$contentWrapper[_this4.axis[axis].offsetAttr] = scrolled, _this4$contentWrapper));\n          elWindow.requestAnimationFrame(scrollTo);\n        }\n      } else {\n        if (scrolled < scrollSize) {\n          var _this4$contentWrapper2;\n          scrolled += _this4.options.clickOnTrackSpeed;\n          _this4.contentWrapperEl.scrollTo((_this4$contentWrapper2 = {}, _this4$contentWrapper2[_this4.axis[axis].offsetAttr] = scrolled, _this4$contentWrapper2));\n          elWindow.requestAnimationFrame(scrollTo);\n        }\n      }\n    };\n    scrollTo();\n  }\n  /**\n   * Getter for content element\n   */;\n\n  _proto.getContentElement = function getContentElement() {\n    return this.contentEl;\n  }\n  /**\n   * Getter for original scrolling element\n   */;\n\n  _proto.getScrollElement = function getScrollElement() {\n    return this.contentWrapperEl;\n  };\n  _proto.getScrollbarWidth = function getScrollbarWidth() {\n    // Try/catch for FF 56 throwing on undefined computedStyles\n    try {\n      // Detect browsers supporting CSS scrollbar styling and do not calculate\n      if (getComputedStyle(this.contentWrapperEl, '::-webkit-scrollbar').display === 'none' || 'scrollbarWidth' in document.documentElement.style || '-ms-overflow-style' in document.documentElement.style) {\n        return 0;\n      } else {\n        return scrollbarWidth(this.el);\n      }\n    } catch (e) {\n      return scrollbarWidth(this.el);\n    }\n  };\n  _proto.removeListeners = function removeListeners() {\n    var _this5 = this;\n    var elWindow = getElementWindow(this.el); // Event listeners\n\n    if (this.options.autoHide) {\n      this.el.removeEventListener('mouseenter', this.onMouseEnter);\n    }\n    ['mousedown', 'click', 'dblclick'].forEach(function (e) {\n      _this5.el.removeEventListener(e, _this5.onPointerEvent, true);\n    });\n    ['touchstart', 'touchend', 'touchmove'].forEach(function (e) {\n      _this5.el.removeEventListener(e, _this5.onPointerEvent, {\n        capture: true,\n        passive: true\n      });\n    });\n    this.el.removeEventListener('mousemove', this.onMouseMove);\n    this.el.removeEventListener('mouseleave', this.onMouseLeave);\n    if (this.contentWrapperEl) {\n      this.contentWrapperEl.removeEventListener('scroll', this.onScroll);\n    }\n    elWindow.removeEventListener('resize', this.onWindowResize);\n    if (this.mutationObserver) {\n      this.mutationObserver.disconnect();\n    }\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    } // Cancel all debounced functions\n\n    this.recalculate.cancel();\n    this.onMouseMove.cancel();\n    this.hideScrollbars.cancel();\n    this.onWindowResize.cancel();\n  }\n  /**\n   * UnMount mutation observer and delete SimpleBar instance from DOM element\n   */;\n\n  _proto.unMount = function unMount() {\n    this.removeListeners();\n    SimpleBar.instances.delete(this.el);\n  }\n  /**\n   * Check if mouse is within bounds\n   */;\n\n  _proto.isWithinBounds = function isWithinBounds(bbox) {\n    return this.mouseX >= bbox.left && this.mouseX <= bbox.left + bbox.width && this.mouseY >= bbox.top && this.mouseY <= bbox.top + bbox.height;\n  }\n  /**\n   * Find element children matches query\n   */;\n\n  _proto.findChild = function findChild(el, query) {\n    var matches = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n    return Array.prototype.filter.call(el.children, function (child) {\n      return matches.call(child, query);\n    })[0];\n  };\n  return SimpleBar;\n}();\nSimpleBar.defaultOptions = {\n  autoHide: true,\n  forceVisible: false,\n  clickOnTrack: true,\n  clickOnTrackSpeed: 40,\n  classNames: {\n    contentEl: 'simplebar-content',\n    contentWrapper: 'simplebar-content-wrapper',\n    offset: 'simplebar-offset',\n    mask: 'simplebar-mask',\n    wrapper: 'simplebar-wrapper',\n    placeholder: 'simplebar-placeholder',\n    scrollbar: 'simplebar-scrollbar',\n    track: 'simplebar-track',\n    heightAutoObserverWrapperEl: 'simplebar-height-auto-observer-wrapper',\n    heightAutoObserverEl: 'simplebar-height-auto-observer',\n    visible: 'simplebar-visible',\n    horizontal: 'simplebar-horizontal',\n    vertical: 'simplebar-vertical',\n    hover: 'simplebar-hover',\n    dragging: 'simplebar-dragging'\n  },\n  scrollbarMinSize: 25,\n  scrollbarMaxSize: 0,\n  timeout: 1000\n};\nSimpleBar.instances = new WeakMap();\nexport default SimpleBar;","map":{"version":3,"sources":["../src/helpers.js","../src/scrollbar-width.js","../src/simplebar.js"],"names":["getElementWindow","element","ownerDocument","defaultView","window","getElementDocument","document","cachedScrollbarWidth","cachedDevicePixelRatio","canUseDOM","addEventListener","devicePixelRatio","scrollbarWidth","el","body","box","createElement","classList","add","appendChild","width","getBoundingClientRect","right","removeChild","SimpleBar","options","minScrollbarWidth","defaultOptions","classNames","axis","x","scrollOffsetAttr","sizeAttr","scrollSizeAttr","offsetSizeAttr","offsetAttr","overflowAttr","dragOffset","isOverflowing","isVisible","forceVisible","track","scrollbar","y","removePreventClickId","instances","has","recalculate","throttle","bind","onMouseMove","hideScrollbars","debounce","timeout","onWindowResize","leading","getRtlHelpers","memoize","init","dummyDiv","innerHTML","scrollbarDummyEl","firstElementChild","dummyContainerChild","scrollLeft","dummyContainerOffset","getOffset","dummyContainerChildOffset","dummyContainerScrollOffsetAfterScroll","isRtlScrollingInverted","left","isRtlScrollbarInverted","autoHide","clickOnTrack","clickOnTrackSpeed","contentEl","contentWrapper","offset","mask","wrapper","placeholder","heightAutoObserverWrapperEl","heightAutoObserverEl","visible","horizontal","vertical","hover","dragging","scrollbarMinSize","scrollbarMaxSize","rect","elDocument","elWindow","top","pageYOffset","documentElement","scrollTop","pageXOffset","WeakMap","set","initDOM","getScrollbarWidth","initListeners","prototype","filter","call","children","child","contains","length","wrapperEl","querySelector","contentWrapperEl","scrollableNode","contentNode","offsetEl","maskEl","placeholderEl","findChild","firstChild","cloneNode","setAttribute","onMouseEnter","forEach","e","onPointerEvent","capture","passive","onMouseLeave","onScroll","resizeObserverStarted","resizeObserver","ResizeObserver","observe","requestAnimationFrame","mutationObserver","MutationObserver","childList","subtree","characterData","elStyles","getComputedStyle","isRtl","direction","isHeightAuto","offsetHeight","isWidthAuto","offsetWidth","contentElOffsetWidth","contentWrapperElOffsetWidth","elOverflowX","overflowX","elOverflowY","overflowY","style","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","contentElScrollHeight","scrollHeight","contentElScrollWidth","scrollWidth","height","contentWrapperElOffsetHeight","hideNativeScrollbar","offsetForXScrollbar","offsetForYScrollbar","size","getScrollbarSize","positionScrollbar","toggleTrackVisibility","contentSize","trackSize","scrollbarSize","scrollbarRatio","Math","max","min","hostSize","parseInt","scrollOffset","scrollPourcent","handleOffset","transform","visibility","display","bottom","scrollXTicking","scrollX","scrollYTicking","scrollY","showScrollbar","mouseX","clientX","mouseY","clientY","onMouseMoveForAxis","isWithinScrollbarBoundsX","isWithinBounds","remove","cancel","onMouseLeaveForAxis","isWithinTrackXBounds","isWithinTrackYBounds","preventDefault","stopPropagation","type","onDragStart","onTrackClick","eventOffset","pageY","pageX","draggedAxis","drag","onEndDrag","preventClick","clearTimeout","dragPos","dragPerc","scrollPos","removeEventListener","setTimeout","scrollbarOffset","scrolled","t","dir","scrollSize","scrollTo","getContentElement","getScrollElement","removeListeners","disconnect","unMount","delete","bbox","query","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector"],"mappings":"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","sourcesContent":["// Helper function to retrieve options from element attributes\nexport const getOptions = function(obj) {\n  const options = Array.prototype.reduce.call(\n    obj,\n    (acc, attribute) => {\n      const option = attribute.name.match(/data-simplebar-(.+)/);\n      if (option) {\n        const key = option[1].replace(/\\W+(.)/g, (x, chr) => chr.toUpperCase());\n        switch (attribute.value) {\n          case 'true':\n            acc[key] = true;\n            break;\n          case 'false':\n            acc[key] = false;\n            break;\n          case undefined:\n            acc[key] = true;\n            break;\n          default:\n            acc[key] = attribute.value;\n        }\n      }\n      return acc;\n    },\n    {}\n  );\n  return options;\n};\n\nexport function getElementWindow(element) {\n  if (\n    !element ||\n    !element.ownerDocument ||\n    !element.ownerDocument.defaultView\n  ) {\n    return window;\n  }\n  return element.ownerDocument.defaultView;\n}\n\nexport function getElementDocument(element) {\n  if (!element || !element.ownerDocument) {\n    return document;\n  }\n  return element.ownerDocument;\n}\n","import canUseDOM from 'can-use-dom';\nimport { getElementDocument } from \"./helpers\";\n\nlet cachedScrollbarWidth = null;\nlet cachedDevicePixelRatio = null;\n\nif (canUseDOM) {\n  window.addEventListener('resize', () => {\n    if (cachedDevicePixelRatio !== window.devicePixelRatio) {\n      cachedDevicePixelRatio = window.devicePixelRatio;\n      cachedScrollbarWidth = null;\n    }\n  });\n}\n\nexport default function scrollbarWidth(el) {\n  if (cachedScrollbarWidth === null) {\n    \n    const document = getElementDocument(el);\n    \n    if (typeof document === 'undefined') {\n      cachedScrollbarWidth = 0;\n      return cachedScrollbarWidth;\n    }\n    const body = document.body;\n    const box = document.createElement('div');\n\n    box.classList.add('simplebar-hide-scrollbar');\n\n    body.appendChild(box);\n\n    const width = box.getBoundingClientRect().right;\n\n    body.removeChild(box);\n\n    cachedScrollbarWidth = width;\n  }\n\n  return cachedScrollbarWidth;\n}\n","import throttle from 'lodash.throttle';\nimport debounce from 'lodash.debounce';\nimport memoize from 'lodash.memoize';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport canUseDOM from 'can-use-dom';\nimport scrollbarWidth from './scrollbar-width';\nimport { getElementWindow, getElementDocument } from './helpers';\n\nexport default class SimpleBar {\n  constructor(element, options) {\n    this.el = element;\n    this.minScrollbarWidth = 20;\n    this.options = { ...SimpleBar.defaultOptions, ...options };\n    this.classNames = {\n      ...SimpleBar.defaultOptions.classNames,\n      ...this.options.classNames\n    };\n    this.axis = {\n      x: {\n        scrollOffsetAttr: 'scrollLeft',\n        sizeAttr: 'width',\n        scrollSizeAttr: 'scrollWidth',\n        offsetSizeAttr: 'offsetWidth',\n        offsetAttr: 'left',\n        overflowAttr: 'overflowX',\n        dragOffset: 0,\n        isOverflowing: true,\n        isVisible: false,\n        forceVisible: false,\n        track: {},\n        scrollbar: {}\n      },\n      y: {\n        scrollOffsetAttr: 'scrollTop',\n        sizeAttr: 'height',\n        scrollSizeAttr: 'scrollHeight',\n        offsetSizeAttr: 'offsetHeight',\n        offsetAttr: 'top',\n        overflowAttr: 'overflowY',\n        dragOffset: 0,\n        isOverflowing: true,\n        isVisible: false,\n        forceVisible: false,\n        track: {},\n        scrollbar: {}\n      }\n    };\n    this.removePreventClickId = null;\n\n    // Don't re-instantiate over an existing one\n    if (SimpleBar.instances.has(this.el)) {\n      return;\n    }\n\n    this.recalculate = throttle(this.recalculate.bind(this), 64);\n    this.onMouseMove = throttle(this.onMouseMove.bind(this), 64);\n    this.hideScrollbars = debounce(\n      this.hideScrollbars.bind(this),\n      this.options.timeout\n    );\n    this.onWindowResize = debounce(this.onWindowResize.bind(this), 64, {\n      leading: true\n    });\n\n    SimpleBar.getRtlHelpers = memoize(SimpleBar.getRtlHelpers);\n\n    this.init();\n  }\n\n  /**\n   * Static properties\n   */\n\n  /**\n   * Helper to fix browsers inconsistency on RTL:\n   *  - Firefox inverts the scrollbar initial position\n   *  - IE11 inverts both scrollbar position and scrolling offset\n   * Directly inspired by @KingSora's OverlayScrollbars https://github.com/KingSora/OverlayScrollbars/blob/master/js/OverlayScrollbars.js#L1634\n   */\n  static getRtlHelpers() {\n    const dummyDiv = document.createElement('div');\n    dummyDiv.innerHTML =\n      '<div class=\"hs-dummy-scrollbar-size\"><div style=\"height: 200%; width: 200%; margin: 10px 0;\"></div></div>';\n    const scrollbarDummyEl = dummyDiv.firstElementChild;\n    document.body.appendChild(scrollbarDummyEl);\n    const dummyContainerChild = scrollbarDummyEl.firstElementChild;\n    scrollbarDummyEl.scrollLeft = 0;\n    const dummyContainerOffset = SimpleBar.getOffset(scrollbarDummyEl);\n    const dummyContainerChildOffset = SimpleBar.getOffset(dummyContainerChild);\n    scrollbarDummyEl.scrollLeft = 999;\n    const dummyContainerScrollOffsetAfterScroll = SimpleBar.getOffset(\n      dummyContainerChild\n    );\n\n    return {\n      // determines if the scrolling is responding with negative values\n      isRtlScrollingInverted:\n        dummyContainerOffset.left !== dummyContainerChildOffset.left &&\n        dummyContainerChildOffset.left -\n          dummyContainerScrollOffsetAfterScroll.left !==\n          0,\n      // determines if the origin scrollbar position is inverted or not (positioned on left or right)\n      isRtlScrollbarInverted:\n        dummyContainerOffset.left !== dummyContainerChildOffset.left\n    };\n  }\n\n  static defaultOptions = {\n    autoHide: true,\n    forceVisible: false,\n    clickOnTrack: true,\n    clickOnTrackSpeed: 40,\n    classNames: {\n      contentEl: 'simplebar-content',\n      contentWrapper: 'simplebar-content-wrapper',\n      offset: 'simplebar-offset',\n      mask: 'simplebar-mask',\n      wrapper: 'simplebar-wrapper',\n      placeholder: 'simplebar-placeholder',\n      scrollbar: 'simplebar-scrollbar',\n      track: 'simplebar-track',\n      heightAutoObserverWrapperEl: 'simplebar-height-auto-observer-wrapper',\n      heightAutoObserverEl: 'simplebar-height-auto-observer',\n      visible: 'simplebar-visible',\n      horizontal: 'simplebar-horizontal',\n      vertical: 'simplebar-vertical',\n      hover: 'simplebar-hover',\n      dragging: 'simplebar-dragging'\n    },\n    scrollbarMinSize: 25,\n    scrollbarMaxSize: 0,\n    timeout: 1000\n  };\n\n  static getOffset(el) {\n    const rect = el.getBoundingClientRect();\n    const elDocument = getElementDocument(el);\n    const elWindow = getElementWindow(el);\n\n    return {\n      top:\n        rect.top +\n        (elWindow.pageYOffset || elDocument.documentElement.scrollTop),\n      left:\n        rect.left +\n        (elWindow.pageXOffset || elDocument.documentElement.scrollLeft)\n    };\n  }\n\n  static instances = new WeakMap();\n\n  init() {\n    // Save a reference to the instance, so we know this DOM node has already been instancied\n    SimpleBar.instances.set(this.el, this);\n\n    // We stop here on server-side\n    if (canUseDOM) {\n      this.initDOM();\n\n      this.scrollbarWidth = this.getScrollbarWidth();\n\n      this.recalculate();\n\n      this.initListeners();\n    }\n  }\n\n  initDOM() {\n    // make sure this element doesn't have the elements yet\n    if (\n      Array.prototype.filter.call(this.el.children, child =>\n        child.classList.contains(this.classNames.wrapper)\n      ).length\n    ) {\n      // assume that element has his DOM already initiated\n      this.wrapperEl = this.el.querySelector(`.${this.classNames.wrapper}`);\n      this.contentWrapperEl =\n        this.options.scrollableNode ||\n        this.el.querySelector(`.${this.classNames.contentWrapper}`);\n      this.contentEl =\n        this.options.contentNode ||\n        this.el.querySelector(`.${this.classNames.contentEl}`);\n\n      this.offsetEl = this.el.querySelector(`.${this.classNames.offset}`);\n      this.maskEl = this.el.querySelector(`.${this.classNames.mask}`);\n\n      this.placeholderEl = this.findChild(\n        this.wrapperEl,\n        `.${this.classNames.placeholder}`\n      );\n      this.heightAutoObserverWrapperEl = this.el.querySelector(\n        `.${this.classNames.heightAutoObserverWrapperEl}`\n      );\n      this.heightAutoObserverEl = this.el.querySelector(\n        `.${this.classNames.heightAutoObserverEl}`\n      );\n      this.axis.x.track.el = this.findChild(\n        this.el,\n        `.${this.classNames.track}.${this.classNames.horizontal}`\n      );\n      this.axis.y.track.el = this.findChild(\n        this.el,\n        `.${this.classNames.track}.${this.classNames.vertical}`\n      );\n    } else {\n      // Prepare DOM\n      this.wrapperEl = document.createElement('div');\n      this.contentWrapperEl = document.createElement('div');\n      this.offsetEl = document.createElement('div');\n      this.maskEl = document.createElement('div');\n      this.contentEl = document.createElement('div');\n      this.placeholderEl = document.createElement('div');\n      this.heightAutoObserverWrapperEl = document.createElement('div');\n      this.heightAutoObserverEl = document.createElement('div');\n\n      this.wrapperEl.classList.add(this.classNames.wrapper);\n      this.contentWrapperEl.classList.add(this.classNames.contentWrapper);\n      this.offsetEl.classList.add(this.classNames.offset);\n      this.maskEl.classList.add(this.classNames.mask);\n      this.contentEl.classList.add(this.classNames.contentEl);\n      this.placeholderEl.classList.add(this.classNames.placeholder);\n      this.heightAutoObserverWrapperEl.classList.add(\n        this.classNames.heightAutoObserverWrapperEl\n      );\n      this.heightAutoObserverEl.classList.add(\n        this.classNames.heightAutoObserverEl\n      );\n\n      while (this.el.firstChild) {\n        this.contentEl.appendChild(this.el.firstChild);\n      }\n\n      this.contentWrapperEl.appendChild(this.contentEl);\n      this.offsetEl.appendChild(this.contentWrapperEl);\n      this.maskEl.appendChild(this.offsetEl);\n      this.heightAutoObserverWrapperEl.appendChild(this.heightAutoObserverEl);\n      this.wrapperEl.appendChild(this.heightAutoObserverWrapperEl);\n      this.wrapperEl.appendChild(this.maskEl);\n      this.wrapperEl.appendChild(this.placeholderEl);\n      this.el.appendChild(this.wrapperEl);\n    }\n\n    if (!this.axis.x.track.el || !this.axis.y.track.el) {\n      const track = document.createElement('div');\n      const scrollbar = document.createElement('div');\n\n      track.classList.add(this.classNames.track);\n      scrollbar.classList.add(this.classNames.scrollbar);\n\n      track.appendChild(scrollbar);\n\n      this.axis.x.track.el = track.cloneNode(true);\n      this.axis.x.track.el.classList.add(this.classNames.horizontal);\n\n      this.axis.y.track.el = track.cloneNode(true);\n      this.axis.y.track.el.classList.add(this.classNames.vertical);\n\n      this.el.appendChild(this.axis.x.track.el);\n      this.el.appendChild(this.axis.y.track.el);\n    }\n\n    this.axis.x.scrollbar.el = this.axis.x.track.el.querySelector(\n      `.${this.classNames.scrollbar}`\n    );\n    this.axis.y.scrollbar.el = this.axis.y.track.el.querySelector(\n      `.${this.classNames.scrollbar}`\n    );\n\n    if (!this.options.autoHide) {\n      this.axis.x.scrollbar.el.classList.add(this.classNames.visible);\n      this.axis.y.scrollbar.el.classList.add(this.classNames.visible);\n    }\n\n    this.el.setAttribute('data-simplebar', 'init');\n  }\n\n  initListeners() {\n    const elWindow = getElementWindow(this.el);\n    // Event listeners\n    if (this.options.autoHide) {\n      this.el.addEventListener('mouseenter', this.onMouseEnter);\n    }\n\n    ['mousedown', 'click', 'dblclick'].forEach(e => {\n      this.el.addEventListener(e, this.onPointerEvent, true);\n    });\n\n    ['touchstart', 'touchend', 'touchmove'].forEach(e => {\n      this.el.addEventListener(e, this.onPointerEvent, {\n        capture: true,\n        passive: true\n      });\n    });\n\n    this.el.addEventListener('mousemove', this.onMouseMove);\n    this.el.addEventListener('mouseleave', this.onMouseLeave);\n\n    this.contentWrapperEl.addEventListener('scroll', this.onScroll);\n\n    // Browser zoom triggers a window resize\n    elWindow.addEventListener('resize', this.onWindowResize);\n\n    // Hack for https://github.com/WICG/ResizeObserver/issues/38\n    let resizeObserverStarted = false;\n    const resizeObserver = elWindow.ResizeObserver || ResizeObserver;\n    this.resizeObserver = new resizeObserver(() => {\n      if (!resizeObserverStarted) return;\n      this.recalculate();\n    });\n\n    this.resizeObserver.observe(this.el);\n    this.resizeObserver.observe(this.contentEl);\n\n    elWindow.requestAnimationFrame(() => {\n      resizeObserverStarted = true;\n    });\n\n    // This is required to detect horizontal scroll. Vertical scroll only needs the resizeObserver.\n    this.mutationObserver = new elWindow.MutationObserver(this.recalculate);\n\n    this.mutationObserver.observe(this.contentEl, {\n      childList: true,\n      subtree: true,\n      characterData: true\n    });\n  }\n\n  recalculate() {\n    const elWindow = getElementWindow(this.el);\n    this.elStyles = elWindow.getComputedStyle(this.el);\n    this.isRtl = this.elStyles.direction === 'rtl';\n\n    const isHeightAuto = this.heightAutoObserverEl.offsetHeight <= 1;\n    const isWidthAuto = this.heightAutoObserverEl.offsetWidth <= 1;\n    const contentElOffsetWidth = this.contentEl.offsetWidth;\n\n    const contentWrapperElOffsetWidth = this.contentWrapperEl.offsetWidth;\n\n    const elOverflowX = this.elStyles.overflowX;\n    const elOverflowY = this.elStyles.overflowY;\n\n    this.contentEl.style.padding = `${this.elStyles.paddingTop} ${this.elStyles.paddingRight} ${this.elStyles.paddingBottom} ${this.elStyles.paddingLeft}`;\n    this.wrapperEl.style.margin = `-${this.elStyles.paddingTop} -${this.elStyles.paddingRight} -${this.elStyles.paddingBottom} -${this.elStyles.paddingLeft}`;\n\n    const contentElScrollHeight = this.contentEl.scrollHeight;\n    const contentElScrollWidth = this.contentEl.scrollWidth;\n\n    this.contentWrapperEl.style.height = isHeightAuto ? 'auto' : '100%';\n\n    // Determine placeholder size\n    this.placeholderEl.style.width = isWidthAuto\n      ? `${contentElOffsetWidth}px`\n      : 'auto';\n    this.placeholderEl.style.height = `${contentElScrollHeight}px`;\n\n    const contentWrapperElOffsetHeight = this.contentWrapperEl.offsetHeight;\n\n    this.axis.x.isOverflowing = contentElScrollWidth > contentElOffsetWidth;\n    this.axis.y.isOverflowing =\n      contentElScrollHeight > contentWrapperElOffsetHeight;\n\n    // Set isOverflowing to false if user explicitely set hidden overflow\n    this.axis.x.isOverflowing =\n      elOverflowX === 'hidden' ? false : this.axis.x.isOverflowing;\n    this.axis.y.isOverflowing =\n      elOverflowY === 'hidden' ? false : this.axis.y.isOverflowing;\n\n    this.axis.x.forceVisible =\n      this.options.forceVisible === 'x' || this.options.forceVisible === true;\n    this.axis.y.forceVisible =\n      this.options.forceVisible === 'y' || this.options.forceVisible === true;\n\n    this.hideNativeScrollbar();\n\n    // Set isOverflowing to false if scrollbar is not necessary (content is shorter than offset)\n    let offsetForXScrollbar = this.axis.x.isOverflowing\n      ? this.scrollbarWidth\n      : 0;\n    let offsetForYScrollbar = this.axis.y.isOverflowing\n      ? this.scrollbarWidth\n      : 0;\n\n    this.axis.x.isOverflowing =\n      this.axis.x.isOverflowing &&\n      contentElScrollWidth > contentWrapperElOffsetWidth - offsetForYScrollbar;\n    this.axis.y.isOverflowing =\n      this.axis.y.isOverflowing &&\n      contentElScrollHeight >\n        contentWrapperElOffsetHeight - offsetForXScrollbar;\n\n    this.axis.x.scrollbar.size = this.getScrollbarSize('x');\n    this.axis.y.scrollbar.size = this.getScrollbarSize('y');\n\n    this.axis.x.scrollbar.el.style.width = `${this.axis.x.scrollbar.size}px`;\n    this.axis.y.scrollbar.el.style.height = `${this.axis.y.scrollbar.size}px`;\n\n    this.positionScrollbar('x');\n    this.positionScrollbar('y');\n\n    this.toggleTrackVisibility('x');\n    this.toggleTrackVisibility('y');\n  }\n\n  /**\n   * Calculate scrollbar size\n   */\n  getScrollbarSize(axis = 'y') {\n    if (!this.axis[axis].isOverflowing) {\n      return 0;\n    }\n\n    const contentSize = this.contentEl[this.axis[axis].scrollSizeAttr];\n    const trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];\n    let scrollbarSize;\n\n    let scrollbarRatio = trackSize / contentSize;\n\n    // Calculate new height/position of drag handle.\n    scrollbarSize = Math.max(\n      ~~(scrollbarRatio * trackSize),\n      this.options.scrollbarMinSize\n    );\n\n    if (this.options.scrollbarMaxSize) {\n      scrollbarSize = Math.min(scrollbarSize, this.options.scrollbarMaxSize);\n    }\n\n    return scrollbarSize;\n  }\n\n  positionScrollbar(axis = 'y') {\n    if (!this.axis[axis].isOverflowing) {\n      return;\n    }\n\n    const contentSize = this.contentWrapperEl[this.axis[axis].scrollSizeAttr];\n    const trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];\n    const hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);\n    const scrollbar = this.axis[axis].scrollbar;\n\n    let scrollOffset = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n    scrollOffset =\n      axis === 'x' &&\n      this.isRtl &&\n      SimpleBar.getRtlHelpers().isRtlScrollingInverted\n        ? -scrollOffset\n        : scrollOffset;\n    let scrollPourcent = scrollOffset / (contentSize - hostSize);\n\n    let handleOffset = ~~((trackSize - scrollbar.size) * scrollPourcent);\n    handleOffset =\n      axis === 'x' &&\n      this.isRtl &&\n      SimpleBar.getRtlHelpers().isRtlScrollbarInverted\n        ? handleOffset + (trackSize - scrollbar.size)\n        : handleOffset;\n\n    scrollbar.el.style.transform =\n      axis === 'x'\n        ? `translate3d(${handleOffset}px, 0, 0)`\n        : `translate3d(0, ${handleOffset}px, 0)`;\n  }\n\n  toggleTrackVisibility(axis = 'y') {\n    const track = this.axis[axis].track.el;\n    const scrollbar = this.axis[axis].scrollbar.el;\n\n    if (this.axis[axis].isOverflowing || this.axis[axis].forceVisible) {\n      track.style.visibility = 'visible';\n      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'scroll';\n    } else {\n      track.style.visibility = 'hidden';\n      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'hidden';\n    }\n\n    // Even if forceVisible is enabled, scrollbar itself should be hidden\n    if (this.axis[axis].isOverflowing) {\n      scrollbar.style.display = 'block';\n    } else {\n      scrollbar.style.display = 'none';\n    }\n  }\n\n  hideNativeScrollbar() {\n    this.offsetEl.style[this.isRtl ? 'left' : 'right'] =\n      this.axis.y.isOverflowing || this.axis.y.forceVisible\n        ? `-${this.scrollbarWidth}px`\n        : 0;\n    this.offsetEl.style.bottom =\n      this.axis.x.isOverflowing || this.axis.x.forceVisible\n        ? `-${this.scrollbarWidth}px`\n        : 0;\n  }\n\n  /**\n   * On scroll event handling\n   */\n  onScroll = () => {\n    const elWindow = getElementWindow(this.el);\n    if (!this.scrollXTicking) {\n      elWindow.requestAnimationFrame(this.scrollX);\n      this.scrollXTicking = true;\n    }\n\n    if (!this.scrollYTicking) {\n      elWindow.requestAnimationFrame(this.scrollY);\n      this.scrollYTicking = true;\n    }\n  };\n\n  scrollX = () => {\n    if (this.axis.x.isOverflowing) {\n      this.showScrollbar('x');\n      this.positionScrollbar('x');\n    }\n\n    this.scrollXTicking = false;\n  };\n\n  scrollY = () => {\n    if (this.axis.y.isOverflowing) {\n      this.showScrollbar('y');\n      this.positionScrollbar('y');\n    }\n\n    this.scrollYTicking = false;\n  };\n\n  onMouseEnter = () => {\n    this.showScrollbar('x');\n    this.showScrollbar('y');\n  };\n\n  onMouseMove = e => {\n    this.mouseX = e.clientX;\n    this.mouseY = e.clientY;\n\n    if (this.axis.x.isOverflowing || this.axis.x.forceVisible) {\n      this.onMouseMoveForAxis('x');\n    }\n\n    if (this.axis.y.isOverflowing || this.axis.y.forceVisible) {\n      this.onMouseMoveForAxis('y');\n    }\n  };\n\n  onMouseMoveForAxis(axis = 'y') {\n    this.axis[axis].track.rect = this.axis[\n      axis\n    ].track.el.getBoundingClientRect();\n    this.axis[axis].scrollbar.rect = this.axis[\n      axis\n    ].scrollbar.el.getBoundingClientRect();\n\n    const isWithinScrollbarBoundsX = this.isWithinBounds(\n      this.axis[axis].scrollbar.rect\n    );\n\n    if (isWithinScrollbarBoundsX) {\n      this.axis[axis].scrollbar.el.classList.add(this.classNames.hover);\n    } else {\n      this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);\n    }\n\n    if (this.isWithinBounds(this.axis[axis].track.rect)) {\n      this.showScrollbar(axis);\n      this.axis[axis].track.el.classList.add(this.classNames.hover);\n    } else {\n      this.axis[axis].track.el.classList.remove(this.classNames.hover);\n    }\n  }\n\n  onMouseLeave = () => {\n    this.onMouseMove.cancel();\n\n    if (this.axis.x.isOverflowing || this.axis.x.forceVisible) {\n      this.onMouseLeaveForAxis('x');\n    }\n\n    if (this.axis.y.isOverflowing || this.axis.y.forceVisible) {\n      this.onMouseLeaveForAxis('y');\n    }\n\n    this.mouseX = -1;\n    this.mouseY = -1;\n  };\n\n  onMouseLeaveForAxis(axis = 'y') {\n    this.axis[axis].track.el.classList.remove(this.classNames.hover);\n    this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);\n  }\n\n  onWindowResize = () => {\n    // Recalculate scrollbarWidth in case it's a zoom\n    this.scrollbarWidth = this.getScrollbarWidth();\n\n    this.hideNativeScrollbar();\n  };\n\n  /**\n   * Show scrollbar\n   */\n  showScrollbar(axis = 'y') {\n    let scrollbar = this.axis[axis].scrollbar.el;\n\n    if (!this.axis[axis].isVisible) {\n      scrollbar.classList.add(this.classNames.visible);\n      this.axis[axis].isVisible = true;\n    }\n\n    if (this.options.autoHide) {\n      this.hideScrollbars();\n    }\n  }\n\n  /**\n   * Hide Scrollbar\n   */\n  hideScrollbars = () => {\n    this.axis.x.track.rect = this.axis.x.track.el.getBoundingClientRect();\n    this.axis.y.track.rect = this.axis.y.track.el.getBoundingClientRect();\n\n    if (!this.isWithinBounds(this.axis.y.track.rect)) {\n      this.axis.y.scrollbar.el.classList.remove(this.classNames.visible);\n      this.axis.y.isVisible = false;\n    }\n\n    if (!this.isWithinBounds(this.axis.x.track.rect)) {\n      this.axis.x.scrollbar.el.classList.remove(this.classNames.visible);\n      this.axis.x.isVisible = false;\n    }\n  };\n\n  onPointerEvent = e => {\n    let isWithinTrackXBounds, isWithinTrackYBounds;\n\n    this.axis.x.track.rect = this.axis.x.track.el.getBoundingClientRect();\n    this.axis.y.track.rect = this.axis.y.track.el.getBoundingClientRect();\n\n    if (this.axis.x.isOverflowing || this.axis.x.forceVisible) {\n      isWithinTrackXBounds = this.isWithinBounds(this.axis.x.track.rect);\n    }\n\n    if (this.axis.y.isOverflowing || this.axis.y.forceVisible) {\n      isWithinTrackYBounds = this.isWithinBounds(this.axis.y.track.rect);\n    }\n\n    // If any pointer event is called on the scrollbar\n    if (isWithinTrackXBounds || isWithinTrackYBounds) {\n      // Preventing the event's default action stops text being\n      // selectable during the drag.\n      e.preventDefault();\n      // Prevent event leaking\n      e.stopPropagation();\n\n      if (e.type === 'mousedown') {\n        if (isWithinTrackXBounds) {\n          this.axis.x.scrollbar.rect = this.axis.x.scrollbar.el.getBoundingClientRect();\n\n          if (this.isWithinBounds(this.axis.x.scrollbar.rect)) {\n            this.onDragStart(e, 'x');\n          } else {\n            this.onTrackClick(e, 'x');\n          }\n        }\n\n        if (isWithinTrackYBounds) {\n          this.axis.y.scrollbar.rect = this.axis.y.scrollbar.el.getBoundingClientRect();\n\n          if (this.isWithinBounds(this.axis.y.scrollbar.rect)) {\n            this.onDragStart(e, 'y');\n          } else {\n            this.onTrackClick(e, 'y');\n          }\n        }\n      }\n    }\n  };\n\n  /**\n   * on scrollbar handle drag movement starts\n   */\n  onDragStart(e, axis = 'y') {\n    const elDocument = getElementDocument(this.el);\n    const elWindow = getElementWindow(this.el);\n    const scrollbar = this.axis[axis].scrollbar;\n\n    // Measure how far the user's mouse is from the top of the scrollbar drag handle.\n    const eventOffset = axis === 'y' ? e.pageY : e.pageX;\n    this.axis[axis].dragOffset =\n      eventOffset - scrollbar.rect[this.axis[axis].offsetAttr];\n    this.draggedAxis = axis;\n\n    this.el.classList.add(this.classNames.dragging);\n\n    elDocument.addEventListener('mousemove', this.drag, true);\n    elDocument.addEventListener('mouseup', this.onEndDrag, true);\n    if (this.removePreventClickId === null) {\n      elDocument.addEventListener('click', this.preventClick, true);\n      elDocument.addEventListener('dblclick', this.preventClick, true);\n    } else {\n      elWindow.clearTimeout(this.removePreventClickId);\n      this.removePreventClickId = null;\n    }\n  }\n\n  /**\n   * Drag scrollbar handle\n   */\n  drag = e => {\n    let eventOffset;\n    const track = this.axis[this.draggedAxis].track;\n    const trackSize = track.rect[this.axis[this.draggedAxis].sizeAttr];\n    const scrollbar = this.axis[this.draggedAxis].scrollbar;\n    const contentSize = this.contentWrapperEl[\n      this.axis[this.draggedAxis].scrollSizeAttr\n    ];\n    const hostSize = parseInt(\n      this.elStyles[this.axis[this.draggedAxis].sizeAttr],\n      10\n    );\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (this.draggedAxis === 'y') {\n      eventOffset = e.pageY;\n    } else {\n      eventOffset = e.pageX;\n    }\n\n    // Calculate how far the user's mouse is from the top/left of the scrollbar (minus the dragOffset).\n    let dragPos =\n      eventOffset -\n      track.rect[this.axis[this.draggedAxis].offsetAttr] -\n      this.axis[this.draggedAxis].dragOffset;\n    // Convert the mouse position into a percentage of the scrollbar height/width.\n    let dragPerc = dragPos / (trackSize - scrollbar.size);\n\n    // Scroll the content by the same percentage.\n    let scrollPos = dragPerc * (contentSize - hostSize);\n\n    // Fix browsers inconsistency on RTL\n    if (this.draggedAxis === 'x') {\n      scrollPos =\n        this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollbarInverted\n          ? scrollPos - (trackSize + scrollbar.size)\n          : scrollPos;\n      scrollPos =\n        this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollingInverted\n          ? -scrollPos\n          : scrollPos;\n    }\n\n    this.contentWrapperEl[\n      this.axis[this.draggedAxis].scrollOffsetAttr\n    ] = scrollPos;\n  };\n\n  /**\n   * End scroll handle drag\n   */\n  onEndDrag = e => {\n    const elDocument = getElementDocument(this.el);\n    const elWindow = getElementWindow(this.el);\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.el.classList.remove(this.classNames.dragging);\n\n    elDocument.removeEventListener('mousemove', this.drag, true);\n    elDocument.removeEventListener('mouseup', this.onEndDrag, true);\n    this.removePreventClickId = elWindow.setTimeout(() => {\n      // Remove these asynchronously so we still suppress click events\n      // generated simultaneously with mouseup.\n      elDocument.removeEventListener('click', this.preventClick, true);\n      elDocument.removeEventListener('dblclick', this.preventClick, true);\n      this.removePreventClickId = null;\n    });\n  };\n\n  /**\n   * Handler to ignore click events during drag\n   */\n  preventClick = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  onTrackClick(e, axis = 'y') {\n    if (!this.options.clickOnTrack) return;\n\n    const elWindow = getElementWindow(this.el);\n    this.axis[axis].scrollbar.rect = this.axis[\n      axis\n    ].scrollbar.el.getBoundingClientRect();\n    const scrollbar = this.axis[axis].scrollbar;\n    const scrollbarOffset = scrollbar.rect[this.axis[axis].offsetAttr];\n    const hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);\n    let scrolled = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n    const t =\n      axis === 'y'\n        ? this.mouseY - scrollbarOffset\n        : this.mouseX - scrollbarOffset;\n    const dir = t < 0 ? -1 : 1;\n    const scrollSize = dir === -1 ? scrolled - hostSize : scrolled + hostSize;\n\n    const scrollTo = () => {\n      if (dir === -1) {\n        if (scrolled > scrollSize) {\n          scrolled -= this.options.clickOnTrackSpeed;\n          this.contentWrapperEl.scrollTo({\n            [this.axis[axis].offsetAttr]: scrolled\n          });\n          elWindow.requestAnimationFrame(scrollTo);\n        }\n      } else {\n        if (scrolled < scrollSize) {\n          scrolled += this.options.clickOnTrackSpeed;\n          this.contentWrapperEl.scrollTo({\n            [this.axis[axis].offsetAttr]: scrolled\n          });\n          elWindow.requestAnimationFrame(scrollTo);\n        }\n      }\n    };\n\n    scrollTo();\n  }\n\n  /**\n   * Getter for content element\n   */\n  getContentElement() {\n    return this.contentEl;\n  }\n\n  /**\n   * Getter for original scrolling element\n   */\n  getScrollElement() {\n    return this.contentWrapperEl;\n  }\n\n  getScrollbarWidth() {\n    // Try/catch for FF 56 throwing on undefined computedStyles\n    try {\n      // Detect browsers supporting CSS scrollbar styling and do not calculate\n      if (\n        getComputedStyle(this.contentWrapperEl, '::-webkit-scrollbar')\n          .display === 'none' ||\n        'scrollbarWidth' in document.documentElement.style ||\n        '-ms-overflow-style' in document.documentElement.style\n      ) {\n        return 0;\n      } else {\n        return scrollbarWidth(this.el);\n      }\n    } catch (e) {\n      return scrollbarWidth(this.el);\n    }\n  }\n\n  removeListeners() {\n    const elWindow = getElementWindow(this.el);\n    // Event listeners\n    if (this.options.autoHide) {\n      this.el.removeEventListener('mouseenter', this.onMouseEnter);\n    }\n\n    ['mousedown', 'click', 'dblclick'].forEach(e => {\n      this.el.removeEventListener(e, this.onPointerEvent, true);\n    });\n\n    ['touchstart', 'touchend', 'touchmove'].forEach(e => {\n      this.el.removeEventListener(e, this.onPointerEvent, {\n        capture: true,\n        passive: true\n      });\n    });\n\n    this.el.removeEventListener('mousemove', this.onMouseMove);\n    this.el.removeEventListener('mouseleave', this.onMouseLeave);\n\n    if (this.contentWrapperEl) {\n      this.contentWrapperEl.removeEventListener('scroll', this.onScroll);\n    }\n\n    elWindow.removeEventListener('resize', this.onWindowResize);\n\n    if (this.mutationObserver) {\n      this.mutationObserver.disconnect();\n    }\n\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n\n    // Cancel all debounced functions\n    this.recalculate.cancel();\n    this.onMouseMove.cancel();\n    this.hideScrollbars.cancel();\n    this.onWindowResize.cancel();\n  }\n\n  /**\n   * UnMount mutation observer and delete SimpleBar instance from DOM element\n   */\n  unMount() {\n    this.removeListeners();\n    SimpleBar.instances.delete(this.el);\n  }\n\n  /**\n   * Check if mouse is within bounds\n   */\n  isWithinBounds(bbox) {\n    return (\n      this.mouseX >= bbox.left &&\n      this.mouseX <= bbox.left + bbox.width &&\n      this.mouseY >= bbox.top &&\n      this.mouseY <= bbox.top + bbox.height\n    );\n  }\n\n  /**\n   * Find element children matches query\n   */\n  findChild(el, query) {\n    const matches =\n      el.matches ||\n      el.webkitMatchesSelector ||\n      el.mozMatchesSelector ||\n      el.msMatchesSelector;\n    return Array.prototype.filter.call(el.children, child =>\n      matches.call(child, query)\n    )[0];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}