{"ast":null,"code":"var _jsxFileName = \"/Users/arturo.velazquez/Documents/GIT/SWE/TEMPLATES/react.my-asin-manager/src/pages/components/Progress.js\";\nimport React from 'react';\nimport { Col, Row, Container } from '@themesberg/react-bootstrap';\nimport Documentation from \"../../components/Documentation\";\nimport Progress from \"../../components/Progress\";\nexport default (() => /*#__PURE__*/React.createElement(\"article\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Container, {\n  className: \"px-0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Row, {\n  className: \"d-flex flex-wrap flex-md-nowrap align-items-center py-4\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Col, {\n  className: \"d-block mb-4 mb-md-0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  className: \"h2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 11\n  }\n}, \"Progress\"), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"mb-0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 11\n  }\n}, \"Use progress bars to indicate percentage based components.\"))), /*#__PURE__*/React.createElement(Documentation, {\n  title: \"Example\",\n  description: /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"Use the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 22\n    }\n  }, \"<Progress>\"), \" component to show progress bars or loaders for your app. You can set the value of the bar using the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 156\n    }\n  }, \"value\"), \" attribute. You can also change the appearance using the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 231\n    }\n  }, \"variant=\\\"*\\\"\"), \" attributes using the default Bootstrap color classes, such as \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 318\n    }\n  }, \"primary\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 340\n    }\n  }, \"secondary\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 364\n    }\n  }, \"danger\"), \" and so on.\"),\n  scope: {\n    Progress\n  },\n  imports: `import Progress from \"src/components/Progress\";`,\n  example: `<Progress variant=\"primary\" label=\"Primary color\" value={25} />`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Documentation, {\n  title: \"Color variations\",\n  description: /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"To update the appearance of the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 46\n    }\n  }, \"<Progress>\"), \" component you can use the following classes for the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 132\n    }\n  }, \"variant\"), \" attribute. You can also add a label text using the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 204\n    }\n  }, \"label=\\\"lorem ipsum\\\"\"), \" attribute.\"),\n  scope: {\n    Progress\n  },\n  imports: `import Progress from \"src/components/Progress\";`,\n  example: `<React.Fragment>\n  <Progress variant=\"secondary\" label=\"Secondary color\" />\n  <Progress variant=\"tertiary\" label=\"Tertiary color\" />\n  <Progress variant=\"dark\" label=\"Dark color\" />\n  <Progress variant=\"success\" label=\"Success color\" />\n  <Progress variant=\"info\" label=\"Info color\" />\n  <Progress variant=\"danger\" label=\"Danger color\" />\n</React.Fragment>`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Documentation, {\n  title: \"Sizing\",\n  description: /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"You can also use one of the four available sizes for the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 71\n    }\n  }, \"<Progress>\"), \" updating the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 118\n    }\n  }, \"size=\\\"*\\\"\"), \" attribute.\"),\n  scope: {\n    Progress\n  },\n  imports: `import Progress from \"src/components/Progress\";`,\n  example: `<React.Fragment>\n  <Progress variant=\"primary\" label=\"XL Progress Bar\" size=\"xl\" />\n  <Progress variant=\"secondary\" label=\"LG Progress Bar\" size=\"lg\" />\n  <Progress variant=\"tertiary\" label=\"MD Progress Bar\" size=\"md\" />\n  <Progress variant=\"info\" label=\"SM Progress Bar\" size=\"sm\" />\n</React.Fragment>`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }\n}))));","map":{"version":3,"names":["React","Col","Row","Container","Documentation","Progress"],"sources":["/Users/arturo.velazquez/Documents/GIT/SWE/TEMPLATES/react.my-asin-manager/src/pages/components/Progress.js"],"sourcesContent":["\nimport React from 'react';\nimport { Col, Row, Container } from '@themesberg/react-bootstrap';\n\nimport Documentation from \"../../components/Documentation\";\nimport Progress from \"../../components/Progress\";\n\nexport default () => (\n  <article>\n    <Container className=\"px-0\">\n      <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\n        <Col className=\"d-block mb-4 mb-md-0\">\n          <h1 className=\"h2\">Progress</h1>\n          <p className=\"mb-0\">\n            Use progress bars to indicate percentage based components.\n          </p>\n        </Col>\n      </Row>\n\n      <Documentation\n        title=\"Example\"\n        description={\n          <p>Use the <code>&#x3C;Progress&#x3E;</code> component to show progress bars or loaders for your app. You can set the value of the bar using the <code>value</code> attribute. You can also change the appearance using the <code>variant=\"*\"</code> attributes using the default Bootstrap color classes, such as <code>primary</code>, <code>secondary</code>, <code>danger</code> and so on.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"src/components/Progress\";`}\n        example={`<Progress variant=\"primary\" label=\"Primary color\" value={25} />`}\n      />\n\n      <Documentation\n        title=\"Color variations\"\n        description={\n          <p>To update the appearance of the <code>&#x3C;Progress&#x3E;</code> component you can use the following classes for the <code>variant</code> attribute. You can also add a label text using the <code>label=\"lorem ipsum\"</code> attribute.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"src/components/Progress\";`}\n        example={`<React.Fragment>\n  <Progress variant=\"secondary\" label=\"Secondary color\" />\n  <Progress variant=\"tertiary\" label=\"Tertiary color\" />\n  <Progress variant=\"dark\" label=\"Dark color\" />\n  <Progress variant=\"success\" label=\"Success color\" />\n  <Progress variant=\"info\" label=\"Info color\" />\n  <Progress variant=\"danger\" label=\"Danger color\" />\n</React.Fragment>`}\n      />\n\n      <Documentation\n        title=\"Sizing\"\n        description={\n          <p>You can also use one of the four available sizes for the <code>&#x3C;Progress&#x3E;</code> updating the <code>size=\"*\"</code> attribute.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"src/components/Progress\";`}\n        example={`<React.Fragment>\n  <Progress variant=\"primary\" label=\"XL Progress Bar\" size=\"xl\" />\n  <Progress variant=\"secondary\" label=\"LG Progress Bar\" size=\"lg\" />\n  <Progress variant=\"tertiary\" label=\"MD Progress Bar\" size=\"md\" />\n  <Progress variant=\"info\" label=\"SM Progress Bar\" size=\"sm\" />\n</React.Fragment>`}\n      />\n    </Container>\n  </article>\n);\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,GAAG,EAAEC,SAAS,QAAQ,6BAA6B;AAEjE,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,QAAQ,MAAM,2BAA2B;AAEhD,gBAAe,mBACb;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,gBACE,oBAAC,SAAS;EAAC,SAAS,EAAC,MAAM;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,gBACzB,oBAAC,GAAG;EAAC,SAAS,EAAC,yDAAyD;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,gBACtE,oBAAC,GAAG;EAAC,SAAS,EAAC,sBAAsB;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,gBACnC;EAAI,SAAS,EAAC,IAAI;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,cAAc,eAChC;EAAG,SAAS,EAAC,MAAM;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,gEAEf,CACA,CACF,eAEN,oBAAC,aAAa;EACZ,KAAK,EAAC,SAAS;EACf,WAAW,eACT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,4BAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAiC,wHAAqG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WAAkB,4EAAyD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAAwB,kFAA+D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aAAoB,qBAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eAAsB,qBAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAAmB,gBACrX;EACD,KAAK,EAAE;IAAEA;EAAS,CAAE;EACpB,OAAO,EAAG,iDAAiD;EAC3D,OAAO,EAAG,iEAAiE;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EAC3E,eAEF,oBAAC,aAAa;EACZ,KAAK,EAAC,kBAAkB;EACxB,WAAW,eACT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,oDAAmC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAiC,wEAAqD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aAAoB,uEAAoD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,2BAAgC,gBAClO;EACD,KAAK,EAAE;IAAEA;EAAS,CAAE;EACpB,OAAO,EAAG,iDAAiD;EAC3D,OAAO,EAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAmB;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EACX,eAEF,oBAAC,aAAa;EACZ,KAAK,EAAC,QAAQ;EACd,WAAW,eACT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,6EAA4D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAiC,iCAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAqB,gBACjI;EACD,KAAK,EAAE;IAAEA;EAAS,CAAE;EACpB,OAAO,EAAG,iDAAiD;EAC3D,OAAO,EAAG;AAClB;AACA;AACA;AACA;AACA,kBAAmB;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EACX,CACQ,CAEf"},"metadata":{},"sourceType":"module"}